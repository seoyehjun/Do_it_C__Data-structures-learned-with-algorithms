/* Q17버전 입니다. */
#include<stdio.h>
#include<stdlib.h>
#include"IntStack2.h"
#define swap(type, x, y) do{type t=x;x=y;y=t;}while(0)

int med3(int a, int b, int c);
void insertion(int *a, int n);
void quick_sort(int *a, int count);
void quick(int *a, int left, int right);

int med3(int a, int b, int c)
{
	if (a >= b)
		if (b >= c)
			return b;
		else if (a <= c)
			return a;
		else
			return c;
	else if (a > c)
		return a;
	else if (b > c)
		return c;
	else
		return b;
}

void quick(int *a, int left, int right)
{
	int pl = left;// left right값도 재설정 해주어야 한다(Pop한 값으로)
	int pr = right;
	int pivot = med3(a[left], a[right], a[(left + right) / 2]);//처음 중간 가운데 값중 중앙값이 피벗값
	
	if (right - left < 9)
	{
		insertion(&a[left], right - left + 1);
	}
	else
	{
		do
		{
			while (a[pl] < pivot)pl++;
			while (a[pr] > pivot)pr--;
			if (pr >= pl)
			{
				swap(int, a[pl], a[pr]);
				pr--;
				pl++;
			}
		} while (pl <= pr);

		if (right - pl > pr - left)// 왼쪽이 크게 만듬
		{
			swap(int, pr, right);
			swap(int, pl, left);
		}
		
		quick(a, pl, right);// 오른쪽(작은거 먼저 처리)
		quick(a, left, pr);// 왼쪽( 푸시 팝 할때는 왼쪽(큰게만든것) 먼저해야쥬? )
	}
	
}
void insertion(int *a, int n)
{
	int i, j;
	for (i = 1; i < n; i++)
	{
		for (j = i; j > 0; j--)
		{
			if (a[j] < a[j - 1])
			{
				swap(int, a[j], a[j - 1]);
			}
		}
	}
}
void quick_sort(int *a, int count)
{
	quick(a, 0, count - 1);
	
	return;
}
int main(void)
{
	int i, nx;
	int *x;
	
	puts("쿽 정렬");
	printf("요소 개수: ");
	scanf("%d", &nx);
	x = calloc(nx, sizeof(int));

	for (i = 0; i < nx; i++)
	{
		printf("x[%d] : ", i);
		scanf("%d", &x[i]);
	}

	quick_sort(x, nx);
	puts("오름차순으로 정렬했습니다.");

	for (i = 0; i < nx; i++)
		printf("x[%d] = %d\n", i, x[i]);
	free(x);

	return 0;
}

